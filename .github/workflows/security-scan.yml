name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  secret-scanning:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for secret scanning

      - name: TruffleHog Secret Scanning
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: GitLeaks Secret Detection
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for known vulnerabilities
        run: |
          npm audit --json > audit-report.json
          echo "Audit report generated"

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: audit-report.json

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  file-integrity:
    name: Check for Sensitive Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check for .env files
        run: |
          if find . -name ".env" -not -path "./node_modules/*" | grep -q .; then
            echo "❌ ERROR: .env file found in repository!"
            find . -name ".env" -not -path "./node_modules/*"
            exit 1
          else
            echo "✅ No .env files found"
          fi

      - name: Check for common secret patterns
        run: |
          echo "Checking for potential secrets..."
          if grep -r -E "(api[_-]?key|secret|password|token).*=.*['\"][a-zA-Z0-9]{20,}" . \
            --exclude-dir={node_modules,.git,dist,build} \
            --exclude={"*.md","*.json",".gitignore"} | grep -v ".env.example"; then
            echo "⚠️ WARNING: Potential secrets found!"
            exit 1
          else
            echo "✅ No obvious secrets detected"
          fi

  security-summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs: [secret-scanning, dependency-check, codeql-analysis, file-integrity]
    if: always()
    steps:
      - name: Check job statuses
        run: |
          echo "Security Scan Summary:"
          echo "- Secret Scanning: ${{ needs.secret-scanning.result }}"
          echo "- Dependency Check: ${{ needs.dependency-check.result }}"
          echo "- CodeQL Analysis: ${{ needs.codeql-analysis.result }}"
          echo "- File Integrity: ${{ needs.file-integrity.result }}"

